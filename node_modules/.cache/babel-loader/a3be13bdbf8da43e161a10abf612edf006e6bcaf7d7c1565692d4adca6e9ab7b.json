{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\contact-management-app\\\\src\\\\components\\\\ChartsMaps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartsMaps = () => {\n  _s();\n  const [worldData, setWorldData] = useState({});\n  const [countriesData, setCountriesData] = useState([]);\n  const [graphData, setGraphData] = useState({});\n  useEffect(() => {\n    // Fetch world data\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => setWorldData(data)).catch(error => console.error(error));\n\n    // Fetch country data\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => setCountriesData(data)).catch(error => console.error(error));\n\n    // Fetch graph data\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\").then(response => response.json()).then(data => {\n      const casesData = data.cases;\n      const deathsData = data.deaths;\n      const recoveredData = data.recovered;\n      const dates = Object.keys(casesData);\n      const cases = Object.values(casesData);\n      const deaths = Object.values(deathsData);\n      const recovered = Object.values(recoveredData);\n      setGraphData({\n        labels: dates,\n        datasets: [{\n          label: \"Cases\",\n          data: cases,\n          borderColor: \"#ff8c00\",\n          fill: false\n        }, {\n          label: \"Deaths\",\n          data: deaths,\n          borderColor: \"#ff0000\",\n          fill: false\n        }, {\n          label: \"Recovered\",\n          data: recovered,\n          borderColor: \"#00ff00\",\n          fill: false\n        }]\n      });\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-semibold mb-6\",\n      children: \"COVID-19 Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-xl\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: graphData,\n        options: {\n          maintainAspectRatio: false\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full mt-8\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [0, 0],\n        zoom: 2,\n        style: {\n          height: \"500px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), countriesData.map(country => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [country.countryInfo.lat, country.countryInfo.long],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: country.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Total Cases: \", country.cases]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Active Cases: \", country.active]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Recovered: \", country.recovered]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Deaths: \", country.deaths]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, country.countryInfo._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartsMaps, \"OaaUJGmQoWpbtfhSrwuLhCN+FSM=\");\n_c = ChartsMaps;\nexport default ChartsMaps;\nvar _c;\n$RefreshReg$(_c, \"ChartsMaps\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Line","jsxDEV","_jsxDEV","ChartsMaps","_s","worldData","setWorldData","countriesData","setCountriesData","graphData","setGraphData","fetch","then","response","json","data","catch","error","console","casesData","cases","deathsData","deaths","recoveredData","recovered","dates","Object","keys","values","labels","datasets","label","borderColor","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","maintainAspectRatio","center","zoom","style","height","url","attribution","map","country","position","countryInfo","lat","long","active","_id","_c","$RefreshReg$"],"sources":["E:/REACT/contact-management-app/src/components/ChartsMaps.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst ChartsMaps = () => {\r\n  const [worldData, setWorldData] = useState({});\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [graphData, setGraphData] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Fetch world data\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => setWorldData(data))\r\n      .catch((error) => console.error(error));\r\n\r\n    // Fetch country data\r\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCountriesData(data))\r\n      .catch((error) => console.error(error));\r\n\r\n    // Fetch graph data\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const casesData = data.cases;\r\n        const deathsData = data.deaths;\r\n        const recoveredData = data.recovered;\r\n\r\n        const dates = Object.keys(casesData);\r\n        const cases = Object.values(casesData);\r\n        const deaths = Object.values(deathsData);\r\n        const recovered = Object.values(recoveredData);\r\n\r\n        setGraphData({\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: \"Cases\",\r\n              data: cases,\r\n              borderColor: \"#ff8c00\",\r\n              fill: false,\r\n            },\r\n            {\r\n              label: \"Deaths\",\r\n              data: deaths,\r\n              borderColor: \"#ff0000\",\r\n              fill: false,\r\n            },\r\n            {\r\n              label: \"Recovered\",\r\n              data: recovered,\r\n              borderColor: \"#00ff00\",\r\n              fill: false,\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center p-8\">\r\n      <h2 className=\"text-3xl font-semibold mb-6\">COVID-19 Dashboard</h2>\r\n\r\n      {/* Line Graph */}\r\n      <div className=\"w-full max-w-xl\">\r\n        <Line data={graphData} options={{ maintainAspectRatio: false }} />\r\n      </div>\r\n\r\n      {/* Map */}\r\n      <div className=\"w-full mt-8\">\r\n        <MapContainer center={[0, 0]} zoom={2} style={{ height: \"500px\" }}>\r\n          <TileLayer\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          />\r\n\r\n          {countriesData.map((country) => (\r\n            <Marker\r\n              key={country.countryInfo._id}\r\n              position={[country.countryInfo.lat, country.countryInfo.long]}\r\n            >\r\n              <Popup>\r\n                <div>\r\n                  <h3>{country.country}</h3>\r\n                  <p>Total Cases: {country.cases}</p>\r\n                  <p>Active Cases: {country.active}</p>\r\n                  <p>Recovered: {country.recovered}</p>\r\n                  <p>Deaths: {country.deaths}</p>\r\n                </div>\r\n              </Popup>\r\n            </Marker>\r\n          ))}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartsMaps;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}