{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\contact-management-app\\\\src\\\\components\\\\ChartsMaps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartsMaps = () => {\n  _s();\n  const [worldData, setWorldData] = useState({});\n  const [countriesData, setCountriesData] = useState([]);\n  const [graphData, setGraphData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    // Fetch world data\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => setWorldData(data)).catch(error => console.error(error));\n\n    // Fetch country data\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => setCountriesData(data)).catch(error => console.error(error));\n\n    // Fetch graph data\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\").then(response => response.json()).then(data => {\n      const casesData = data.cases;\n      const deathsData = data.deaths;\n      const recoveredData = data.recovered;\n      const dates = Object.keys(casesData);\n      const cases = Object.values(casesData);\n      const deaths = Object.values(deathsData);\n      const recovered = Object.values(recoveredData);\n      setGraphData({\n        labels: dates,\n        datasets: [{\n          label: \"Cases\",\n          data: cases,\n          borderColor: \"#ff8c00\",\n          fill: false\n        }, {\n          label: \"Deaths\",\n          data: deaths,\n          borderColor: \"#ff0000\",\n          fill: false\n        }, {\n          label: \"Recovered\",\n          data: recovered,\n          borderColor: \"#00ff00\",\n          fill: false\n        }]\n      });\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Worldwide COVID-19 Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartsMaps, \"wGGefwniNCFI9pRwiyLq7Jcw9aQ=\");\n_c = ChartsMaps;\nexport default ChartsMaps;\nvar _c;\n$RefreshReg$(_c, \"ChartsMaps\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","ChartsMaps","_s","worldData","setWorldData","countriesData","setCountriesData","graphData","setGraphData","labels","datasets","fetch","then","response","json","data","catch","error","console","casesData","cases","deathsData","deaths","recoveredData","recovered","dates","Object","keys","values","label","borderColor","fill","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/REACT/contact-management-app/src/components/ChartsMaps.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst ChartsMaps = () => {\r\n  const [worldData, setWorldData] = useState({});\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch world data\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => setWorldData(data))\r\n      .catch((error) => console.error(error));\r\n\r\n    // Fetch country data\r\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCountriesData(data))\r\n      .catch((error) => console.error(error));\r\n\r\n    // Fetch graph data\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const casesData = data.cases;\r\n        const deathsData = data.deaths;\r\n        const recoveredData = data.recovered;\r\n\r\n        const dates = Object.keys(casesData);\r\n        const cases = Object.values(casesData);\r\n        const deaths = Object.values(deathsData);\r\n        const recovered = Object.values(recoveredData);\r\n\r\n        setGraphData({\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: \"Cases\",\r\n              data: cases,\r\n              borderColor: \"#ff8c00\",\r\n              fill: false,\r\n            },\r\n            {\r\n              label: \"Deaths\",\r\n              data: deaths,\r\n              borderColor: \"#ff0000\",\r\n              fill: false,\r\n            },\r\n            {\r\n              label: \"Recovered\",\r\n              data: recovered,\r\n              borderColor: \"#00ff00\",\r\n              fill: false,\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Worldwide COVID-19 Data</h2>\r\n      {/* Render your line graph using graphData here */}\r\n      <Line data={graphData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartsMaps;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC;IACzCa,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACd;IACAc,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKX,YAAY,CAACW,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;;IAEzC;IACAN,KAAK,CAAC,0CAA0C,CAAC,CAC9CC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKT,gBAAgB,CAACS,IAAI,CAAC,CAAC,CACtCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;;IAEzC;IACAN,KAAK,CAAC,4DAA4D,CAAC,CAChEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,MAAMI,SAAS,GAAGJ,IAAI,CAACK,KAAK;MAC5B,MAAMC,UAAU,GAAGN,IAAI,CAACO,MAAM;MAC9B,MAAMC,aAAa,GAAGR,IAAI,CAACS,SAAS;MAEpC,MAAMC,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACR,SAAS,CAAC;MACpC,MAAMC,KAAK,GAAGM,MAAM,CAACE,MAAM,CAACT,SAAS,CAAC;MACtC,MAAMG,MAAM,GAAGI,MAAM,CAACE,MAAM,CAACP,UAAU,CAAC;MACxC,MAAMG,SAAS,GAAGE,MAAM,CAACE,MAAM,CAACL,aAAa,CAAC;MAE9Cf,YAAY,CAAC;QACXC,MAAM,EAAEgB,KAAK;QACbf,QAAQ,EAAE,CACR;UACEmB,KAAK,EAAE,OAAO;UACdd,IAAI,EAAEK,KAAK;UACXU,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE;QACR,CAAC,EACD;UACEF,KAAK,EAAE,QAAQ;UACfd,IAAI,EAAEO,MAAM;UACZQ,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE;QACR,CAAC,EACD;UACEF,KAAK,EAAE,WAAW;UAClBd,IAAI,EAAES,SAAS;UACfM,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE;QACR,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,CACDf,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAAgC,QAAA,gBACEhC,OAAA;MAAAgC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhCpC,OAAA,CAACF,IAAI;MAACiB,IAAI,EAAER;IAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAAClC,EAAA,CApEID,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AAsEhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}