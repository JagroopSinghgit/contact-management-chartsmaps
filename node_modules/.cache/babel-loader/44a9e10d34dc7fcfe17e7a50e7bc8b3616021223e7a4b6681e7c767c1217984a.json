{"ast":null,"code":"var _jsxFileName = \"E:\\\\REACT\\\\contact-management-app\\\\src\\\\components\\\\ChartsMaps.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Line } from \"react-chartjs-2\";\nimport Chart from \"chart.js/auto\"; // Correct import for Chart.js\nimport moment from \"moment\"; // Correct import for Moment.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartsMaps = () => {\n  _s();\n  const [worldData, setWorldData] = useState({});\n  const [countriesData, setCountriesData] = useState([]);\n  const [graphData, setGraphData] = useState({\n    labels: [],\n    datasets: []\n  });\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\n  const [mapZoom, setMapZoom] = useState(3);\n  useEffect(() => {\n    // Fetch world data\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => setWorldData(data)).catch(error => console.error(error));\n\n    // Fetch country data\n    fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => setCountriesData(data)).catch(error => console.error(error));\n\n    // Fetch graph data\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\").then(response => response.json()).then(data => {\n      const casesData = data.cases;\n      const deathsData = data.deaths;\n      const recoveredData = data.recovered;\n      const dates = Object.keys(casesData);\n      const cases = Object.values(casesData);\n      const deaths = Object.values(deathsData);\n      const recovered = Object.values(recoveredData);\n      setGraphData({\n        labels: dates,\n        datasets: [{\n          label: \"Cases\",\n          data: cases,\n          borderColor: \"#ff8c00\",\n          fill: false\n        }, {\n          label: \"Deaths\",\n          data: deaths,\n          borderColor: \"#ff0000\",\n          fill: false\n        }, {\n          label: \"Recovered\",\n          data: recovered,\n          borderColor: \"#00ff00\",\n          fill: false\n        }]\n      });\n    }).catch(error => console.error(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"charts-section mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Worldwide COVID-19 Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md\",\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: graphData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"COVID-19 Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow-md overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-80 md:h-96\",\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              center: mapCenter,\n              zoom: mapZoom,\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), countriesData.map(country => /*#__PURE__*/_jsxDEV(Marker, {\n                position: [country.countryInfo.lat, country.countryInfo.long],\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"popup-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"text-lg font-bold mb-2\",\n                      children: country.country\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm mb-1\",\n                      children: [\"Total Cases: \", country.cases]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm mb-1\",\n                      children: [\"Recovered: \", country.recovered]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm mb-1\",\n                      children: [\"Deaths: \", country.deaths]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 21\n                }, this)\n              }, country.countryInfo.iso2, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartsMaps, \"iRCGVHV7B94PAYe6JsdmpjFnzDw=\");\n_c = ChartsMaps;\nexport default ChartsMaps;\nvar _c;\n$RefreshReg$(_c, \"ChartsMaps\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Line","Chart","moment","jsxDEV","_jsxDEV","ChartsMaps","_s","worldData","setWorldData","countriesData","setCountriesData","graphData","setGraphData","labels","datasets","mapCenter","setMapCenter","mapZoom","setMapZoom","fetch","then","response","json","data","catch","error","console","casesData","cases","deathsData","deaths","recoveredData","recovered","dates","Object","keys","values","label","borderColor","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","url","map","country","position","countryInfo","lat","long","iso2","_c","$RefreshReg$"],"sources":["E:/REACT/contact-management-app/src/components/ChartsMaps.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Chart from \"chart.js/auto\"; // Correct import for Chart.js\r\nimport moment from \"moment\"; // Correct import for Moment.js\r\n\r\nconst ChartsMaps = () => {\r\n  const [worldData, setWorldData] = useState({});\r\n  const [countriesData, setCountriesData] = useState([]);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: [],\r\n  });\r\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n\r\n  useEffect(() => {\r\n    // Fetch world data\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => setWorldData(data))\r\n      .catch((error) => console.error(error));\r\n\r\n    // Fetch country data\r\n    fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n      .then((response) => response.json())\r\n      .then((data) => setCountriesData(data))\r\n      .catch((error) => console.error(error));\r\n\r\n    // Fetch graph data\r\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const casesData = data.cases;\r\n        const deathsData = data.deaths;\r\n        const recoveredData = data.recovered;\r\n\r\n        const dates = Object.keys(casesData);\r\n        const cases = Object.values(casesData);\r\n        const deaths = Object.values(deathsData);\r\n        const recovered = Object.values(recoveredData);\r\n\r\n        setGraphData({\r\n          labels: dates,\r\n          datasets: [\r\n            {\r\n              label: \"Cases\",\r\n              data: cases,\r\n              borderColor: \"#ff8c00\",\r\n              fill: false,\r\n            },\r\n            {\r\n              label: \"Deaths\",\r\n              data: deaths,\r\n              borderColor: \"#ff0000\",\r\n              fill: false,\r\n            },\r\n            {\r\n              label: \"Recovered\",\r\n              data: recovered,\r\n              borderColor: \"#00ff00\",\r\n              fill: false,\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((error) => console.error(error));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen p-8\">\r\n      <div className=\"container mx-auto\">\r\n        <div className=\"charts-section mb-8\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Worldwide COVID-19 Data</h2>\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md\">\r\n            <Line data={graphData} />\r\n          </div>\r\n        </div>\r\n        <div className=\"map-section\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">COVID-19 Map</h2>\r\n          <div className=\"bg-white p-6 rounded-lg shadow-md overflow-hidden\">\r\n            <div className=\"h-80 md:h-96\">\r\n              <MapContainer center={mapCenter} zoom={mapZoom}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                {countriesData.map((country) => (\r\n                  <Marker\r\n                    key={country.countryInfo.iso2}\r\n                    position={[\r\n                      country.countryInfo.lat,\r\n                      country.countryInfo.long,\r\n                    ]}\r\n                  >\r\n                    <Popup>\r\n                      <div className=\"popup-content\">\r\n                        <h3 className=\"text-lg font-bold mb-2\">\r\n                          {country.country}\r\n                        </h3>\r\n                        <p className=\"text-sm mb-1\">\r\n                          Total Cases: {country.cases}\r\n                        </p>\r\n                        <p className=\"text-sm mb-1\">\r\n                          Recovered: {country.recovered}\r\n                        </p>\r\n                        <p className=\"text-sm mb-1\">Deaths: {country.deaths}</p>\r\n                      </div>\r\n                    </Popup>\r\n                  </Marker>\r\n                ))}\r\n              </MapContainer>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartsMaps;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}